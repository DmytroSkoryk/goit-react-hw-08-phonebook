{"version":3,"file":"static/js/907.ed39f902.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filterTitle\":\"Filter_filterTitle__5SDqd\",\"inputFilter\":\"Filter_inputFilter__8QMOp\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    const newFilter = event.target.value;\n    dispatch(setFilter(newFilter));\n  };\n\n  return (\n    <label>\n      <h3 className={css.filterTitle}>Find contacts by name</h3>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={handleFilterChange}\n        className={css.inputFilter}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.trim().toLowerCase();\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsTitle\":\"ContactList_contactsTitle__gHlpa\",\"contactList\":\"ContactList_contactList__UFVCg\",\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"delBtn\":\"ContactList_delBtn__SixzE\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Filter from '../Filter/Filter';\nimport * as selectors from '../../redux/contacts/selectors';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport css from './ContactList.module.css';\n\nconst getVisibleContacts = (contacts, filterContacts) => {\n  if (contacts.length === 0) {\n    return [];\n  }\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterContacts)\n  );\n};\n\nconst ContactList = () => {\n  const contacts = useSelector(selectors.selectContacts);\n  const filterContacts = useSelector(selectors.selectFilter);\n  const isLoading = useSelector(selectors.selectIsLoading);\n  const error = useSelector(selectors.selectError);\n  const visibleContacts = getVisibleContacts(contacts, filterContacts);\n  const dispatch = useDispatch();\n  const handleDelete = id => dispatch(deleteContacts(id));\n  return (\n    <section>\n      <h2 className={css.contactsTitle}>Contacts</h2>\n      <Filter />\n      <ul className={css.contactList}>\n        {isLoading && <b>Loading contacts...</b>}\n        {error && <b>{error}</b>}\n        {visibleContacts.map(({ id, name, number }) => (\n          <li key={id} className={css.contactItem}>\n            {name}: {number}\n            <button\n              type=\"button\"\n              className={css.delBtn}\n              onClick={() => handleDelete(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"mainTitle\":\"ContactForm_mainTitle__Eud0j\",\"phonebookForm\":\"ContactForm_phonebookForm__KwlhY\",\"nameForm\":\"ContactForm_nameForm__7jLzJ\",\"nameTitle\":\"ContactForm_nameTitle__0YGM8\",\"inputName\":\"ContactForm_inputName__a8jFO\",\"addForm\":\"ContactForm_addForm__bZyZf\",\"numberTitle\":\"ContactForm_numberTitle__Rf4es\",\"inputNumber\":\"ContactForm_inputNumber__DBiVZ\",\"addBtn\":\"ContactForm_addBtn__CACuJ\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    form.reset();\n    const isDuplicateName = contacts.find(contact => contact.name === name);\n    if (isDuplicateName) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(addContacts({ name, number }));\n  };\n  return (\n    <section>\n      <h1 className={css.mainTitle}>Phonebook</h1>\n      <form onSubmit={handleSubmit} className={css.phonebookForm}>\n        <label className={css.nameForm}>\n          <h2 className={css.nameTitle}>Name</h2>\n          <input\n            className={css.inputName}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"[a-zA-Zа-яА-Я][a-zA-Zа-яА-Я' -]*\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={css.addForm}>\n          <h2 className={css.numberTitle}>Number</h2>\n          <input\n            className={css.inputNumber}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"/^\\+?\\d{1,4}[-.\\s]?\\(?\\d{1,3}\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={css.addBtn}>\n          Add contact\n        </button>\n      </form>\n    </section>\n  );\n};\nexport default ContactForm;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactList from '../components/ContactList/ContactList';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectIsLoading } from '../redux/contacts/selectors';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["filter","useSelector","state","dispatch","useDispatch","className","css","type","value","onChange","event","newFilter","target","setFilter","selectContacts","contacts","items","selectFilter","trim","toLowerCase","selectIsLoading","isLoading","selectError","error","selectors","filterContacts","visibleContacts","length","contact","name","includes","getVisibleContacts","map","id","number","onClick","deleteContacts","handleDelete","onSubmit","preventDefault","form","elements","reset","find","alert","addContacts","pattern","title","required","Tasks","useEffect","fetchContacts","Helmet"],"sourceRoot":""}